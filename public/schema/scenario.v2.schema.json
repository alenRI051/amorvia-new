{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://amorvia.eu/schema/scenario.v2.schema.json",
  "title": "Amorvia Scenario v2",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "version",
    "id",
    "title",
    "acts"
  ],
  "properties": {
    "version": {
      "const": 2
    },
    "id": {
      "type": "string",
      "minLength": 1
    },
    "title": {
      "type": "string",
      "minLength": 1
    },
    "meters": {
      "description": "Optional per-scenario meters with labels and starting values.",
      "type": "object",
      "minProperties": 1,
      "additionalProperties": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "label": {
            "type": "string",
            "minLength": 1
          },
          "start": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "min": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          "max": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          }
        }
      },
      "propertyNames": {
        "type": "string",
        "pattern": "^[a-zA-Z][a-zA-Z0-9_-]{0,32}$"
      }
    },
    "acts": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/$defs/act"
      }
    }
  },
  "$defs": {
    "effects": {
      "description": "Meter deltas to apply; keys are meter ids; values in [-100, 100].",
      "type": "object",
      "minProperties": 1,
      "additionalProperties": {
        "type": "number",
        "minimum": -100,
        "maximum": 100
      },
      "propertyNames": {
        "type": "string",
        "pattern": "^[a-zA-Z][a-zA-Z0-9_-]{0,32}$"
      }
    },
    "choice": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "label",
        "to"
      ],
      "properties": {
        "label": {
          "type": "string",
          "minLength": 1
        },
        "effects": {
          "$ref": "#/$defs/effects"
        },
        "to": {
          "type": "string",
          "minLength": 1,
          "description": "Next node id inside the same act, or the string 'end'."
        }
      }
    },
    "node": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1
        },
        "type": {
          "enum": [
            "line",
            "choice",
            "goto",
            "end"
          ]
        },
        "text": {
          "type": "string"
        },
        "next": {
          "type": "string",
          "minLength": 1
        },
        "prompt": {
          "type": "string"
        },
        "choices": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/choice"
          },
          "minItems": 2
        },
        "to": {
          "type": "string",
          "minLength": 1
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "line"
              }
            },
            "required": [
              "type"
            ]
          },
          "then": {
            "required": [
              "text"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "choice"
              }
            },
            "required": [
              "type"
            ]
          },
          "then": {
            "required": [
              "prompt",
              "choices"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "goto"
              }
            },
            "required": [
              "type"
            ]
          },
          "then": {
            "required": [
              "to"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "end"
              }
            },
            "required": [
              "type"
            ]
          },
          "then": {}
        }
      ]
    },
    "act": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "id",
        "title",
        "start",
        "nodes"
      ],
      "properties": {
        "id": {
          "type": "string",
          "minLength": 1
        },
        "title": {
          "type": "string",
          "minLength": 1
        },
        "start": {
          "type": "string",
          "minLength": 1
        },
        "nodes": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/$defs/node"
          }
        }
      }
    }
  }
}